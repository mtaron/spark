#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# We need to build from debian:bullseye-slim because openjdk switches its underlying OS
# from debian to oraclelinux from openjdk:12
FROM debian:bullseye-slim

ENV DEBIAN_FRONTEND=noninteractive

ARG USERNAME=spark
ARG USER_UID=185
ARG USER_GID=$USER_UID

ENV SPARK_HOME /opt/spark

# Before building the docker image, first build and make a Spark distribution following
# the instructions in https://spark.apache.org/docs/latest/building-spark.html.
# If this docker file is being used in the context of building your images from a Spark
# distribution, the docker build command should be invoked from the top level directory
# of the Spark distribution. E.g.:
# docker build -t spark:latest -f kubernetes/dockerfiles/spark/Dockerfile .

RUN apt-get update \
    && apt-get upgrade -y \
    && apt-get install -y --no-install-recommends \
        acl \
        krb5-user \
        libc6 \
        libnss3 \
        net-tools \
        openjdk-17-jre \
        procps \
        tini \
    && groupadd --gid $USER_GID $USERNAME \
    && useradd --uid $USER_UID --gid $USER_GID --create-home $USERNAME \
    && echo "auth required pam_wheel.so use_uid" >> /etc/pam.d/su \
    && chgrp root /etc/passwd && chmod ug+rw /etc/passwd \
    && rm -rf /var/cache/apt/*

COPY --chown=spark jars /opt/spark/jars
COPY --chown=spark bin /opt/spark/bin
COPY --chown=spark sbin /opt/spark/sbin
COPY --chown=spark kubernetes/dockerfiles/spark/entrypoint.sh /opt/
COPY --chown=spark kubernetes/dockerfiles/spark/decom.sh /opt/
COPY --chown=spark data /opt/spark/data

RUN chmod a+x /opt/decom.sh

USER ${USERNAME}

RUN mkdir -p /opt/spark/work-dir \
    && touch /opt/spark/RELEASE \
    && chmod g+sw /opt/spark/work-dir \
    && setfacl --default --modify=g::rwx /opt/spark

WORKDIR /opt/spark/work-dir

ENTRYPOINT [ "/opt/entrypoint.sh" ]
